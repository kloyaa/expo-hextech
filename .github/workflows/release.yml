name: EAS Build and Release

on:
  push:
    branches:
      - master
      - develop
      - release/*

jobs:
  setup:
    name: Setup Environment and Get App Version
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.get_app_version.outputs.app_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0' # Specific LTS version

      - name: Install project dependencies
        run: npm ci

      - name: Get App Version from package.json
        id: get_app_version
        shell: bash
        run: |
          APP_VERSION=$(node -p "require('./package.json').version")
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "App Version: $APP_VERSION"

  build-android:
    name: Build Android App
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Install EAS CLI
        run: npm install -g eas-cli # Consider npx for local installs

      - name: Set up Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest # Pin Expo SDK Version!
          eas-version: latest # Pin EAS CLI Version!
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install project dependencies (Review if truly needed)
        run: npm ci

      - name: Build Android app with EAS
        run: |
          eas build --platform android --profile preview --local --output ${{ github.workspace }}/app-release-${{ needs.setup.outputs.app_version }}.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ needs.setup.outputs.app_version }}
          path: ${{ github.workspace }}/app-release-${{ needs.setup.outputs.app_version }}.apk

  release:
    name: Release and Publish to Expo
    needs: build-android
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # NPM_TOKEN: ${{ secrets.NPM_TOKEN }} # Only if publishing to npm
        id: semantic_release # Add an ID to the semantic-release step
        run: npx semantic-release

      - name: Publish update to Expo (Conditional)
        if: steps.semantic_release.outcome != 'success'
        run: npx eas update --branch production --message "Automated update from GitHub Actions - v${{ needs.setup.outputs.app_version }}" # Or eas submit
