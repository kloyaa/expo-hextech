name: EAS Build and Release

on:
  push:
    branches:
      - master
      - develop
      - release/*

jobs:
  setup:
    name: Setup Environment and Get App Version
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.get_app_version.outputs.app_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'

      - name: Install dependencies
        run: npm ci

      - name: Get App Version from package.json
        id: get_app_version
        run: |
          APP_VERSION=$(node -p "require('./package.json').version")
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "App Version: $APP_VERSION"

  build-android:
    name: Build Android App
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'

      - name: Install dependencies
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Set up Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build Android App with EAS
        run: |
          eas build --platform android --profile production --no-wait

      # Fetch the latest AAB URL from Expo if using remote builds
      - name: Get AAB URL
        id: get_aab_url
        run: |
          BUILD_JSON=$(eas build:list --json --non-interactive)
          echo "Build JSON Output: $BUILD_JSON"  # Debugging step

          BUILD_URL=$(echo "$BUILD_JSON" | jq -r '.[0].artifacts.buildUrl // empty')

          if [[ -z "$BUILD_URL" ]]; then
            echo "::error::No completed EAS builds found!"
            exit 1
          fi

          echo "aab_url=$BUILD_URL" >> $GITHUB_OUTPUT
          echo "AAB URL: $BUILD_URL"

      # Download the AAB file from Expo (if built remotely)
      - name: Download AAB
        run: curl -o app-release.aab "${{ steps.get_aab_url.outputs.aab_url }}"

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ needs.setup.outputs.app_version }}
          path: app-release.aab

  release:
    name: Release and Publish to Expo
    needs: build-android
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'

      - name: Install dependencies
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Set up Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      # Run Semantic Release to generate a new version tag
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: semantic_release
        run: npx semantic-release

      # Get the latest AAB from the build job
      - name: Download AAB Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-${{ needs.setup.outputs.app_version }}
          path: .

      - name: Upload AAB to GitHub Release
        if: steps.semantic_release.outcome == 'success'
        uses: softprops/action-gh-release@v1
        with:
          files: app-release.aab
          tag_name: ${{ steps.semantic_release.outputs.new_release_version }}
          name: "Release ${{ steps.semantic_release.outputs.new_release_version }}"
          body: "Automated release via GitHub Actions."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifacts
        if: steps.semantic_release.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: app-builds-${{ needs.setup.outputs.app_version }}
          path: app-release.aab
