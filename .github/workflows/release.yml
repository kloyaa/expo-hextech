name: EAS Build and Release

on:
  push:
    branches:
      - master
      - develop
      - release/*

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.get_app_version.outputs.app_version }}
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Set up Expo
      - name: Set up Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      # Install project dependencies
      - name: Install dependencies
        run: npm ci

      # Get App Version from package.json
      - name: Get App Version
        id: get_app_version
        run: |
          APP_VERSION=$(node -p "require('./package.json').version")
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT

  build:
    needs: setup  # Depends on the setup job
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17 for Android build
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      # Set up Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # Cache Gradle dependencies for faster builds
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      # Install EAS CLI globally
      - name: Install EAS CLI
        run: npm install -g eas-cli
        
      # Build Android app with EAS
      - name: Build Android app
        run: |
          eas build --platform android --profile preview --local --output ${{ github.workspace }}/app-release-${{ needs.setup.outputs.app_version }}.apk

      # Upload APK artifact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ needs.setup.outputs.app_version }}
          path: ${{ github.workspace }}/app-release-${{ needs.setup.outputs.app_version }}.apk

  release:
    needs: build  # Depends on the build job
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Install EAS CLI globally
      - name: Install EAS CLI
        run: npm install -g eas-cli

      # Set up Expo
      - name: Set up Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      # Install project dependencies
      - name: Install dependencies
        run: npm ci

      # Publish the app update to Expo
      - name: Publish update to Expo
        run: npx eas update --branch production --message "Automated update from GitHub Actions"
